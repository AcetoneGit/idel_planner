<div class="calendar-container">
  <div class="calendar-header">
    <% prev_month = @current_month << 1 %>
    <% next_month = @current_month >> 1 %>

    <%= link_to '❮', appointments_path(display: 'month', month: prev_month.month, year: prev_month.year), class: "calendar-button" %>
    <h2><%= I18n.l(@current_month, format: '%B %Y', locale: :fr) %></h2>
    <%= link_to '❯', appointments_path(display: 'month', month: next_month.month, year: next_month.year), class: "calendar-button" %>
  </div>

  <div class="calendar-days">
    <% # Obtenir les jours dans l'ordre Lundi à Dimanche %>
    <% days_order = I18n.t("date.abbr_day_names", locale: :fr).rotate %>
    <% days_order.each do |day_name| %>
      <div class="day-name"><%= day_name.capitalize %></div>
    <% end %>

    <%# Calcul du premier et dernier jour du mois %>
    <% @current_month ||= Date.new(params[:year].to_i || Date.today.year, params[:month].to_i || Date.today.month, 1) %>
    <% days_in_month = @current_month.end_of_month.day %>
    <% first_day_of_week_adjusted = (@current_month.beginning_of_month.wday - 1) % 7 %>

    <%# Ajout des cases vides avant le premier jour %>
    <% first_day_of_week_adjusted.times do %>
      <div class="day empty"></div>
    <% end %>

    <%# Ajout des jours du mois %>
    <% (1..days_in_month).each do |day| %>
      <% date = @current_month.beginning_of_month + (day - 1).days %>
      <div class="day <%= 'today' if date == Date.today %>">
        <%= link_to day, appointments_path(display: 'day', jd: date.jd), class: "day-link" %>
      </div>
    <% end %>

    <%# Ajout des cases vides après le dernier jour %>
    <% remaining_days_in_week = (7 - ((days_in_month + first_day_of_week_adjusted) % 7)) % 7 %>
    <% remaining_days_in_week.times do %>
      <div class="day empty"></div>
    <% end %>
  </div>
</div>
